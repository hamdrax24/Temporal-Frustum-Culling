<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_camera_create(0,0,12,4);

show_debug_overlay(true);

boxcount = 1024;
boxposition = array_create(boxcount * 3);
boxextent = array_create(boxcount * 3);
culloffset = array_create(boxcount);

culled_list = ds_list_create();
unculled_list = ds_list_create();

extentrange = 30;
positionrange = 1024;

for(var ii = 0;ii &lt; boxcount;ii++)
{
    boxposition[ii * 3] = random_range(-positionrange,positionrange);
    boxposition[ii * 3 + 1] = random_range(-positionrange,positionrange);
    boxposition[ii * 3 + 2] = random_range(-positionrange,positionrange);
    
    boxextent[ii * 3] = random_range(10,extentrange);
    boxextent[ii * 3 + 1] = random_range(10,extentrange);
    boxextent[ii * 3 + 2] = random_range(10,extentrange);
    
    ds_list_add(culled_list,ii);
}

timer = 0;
if_true = true;

culled_boxes = 0;

culling_time = 50;

drawposition = array_create(1);
drawextent = array_create(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_camera_step();

timer  = get_timer();

culled_boxes = 0;

if keyboard_check(vk_up){culling_time = max(20,culling_time + 1);}
if keyboard_check(vk_down){culling_time = max(20,culling_time - 1);}

if(if_true)
{
    temporal_frustum_culling(matrix_multiply(view_matrix,proj_matrix),culling_time);
}
else
{    
    frustum_culling(matrix_multiply(view_matrix,proj_matrix));
}

timer = (get_timer() - timer ) / 1000.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);

draw_text(0,20,"Fps: " + string(fps));
draw_text(0,36,"Fustum culling Frametime: " + string(timer));
draw_text(0,52,"Filtered Boxes: " + string(culled_boxes / 3));
if(if_true)
{
    draw_text(0,68,"Culling Type: Temporal Frustum culling");
    draw_text(0,84,"Culling allocated time: " + string(culling_time) + " (microseconds)");
    draw_text(0,100,"Up/Down to change allocated frametime (minimum of 20)");
}
else
{
    draw_text(0,68,"Culling Type: Classic Frustum culling");
}

draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>matrix_set(matrix_view,view_matrix);
matrix_set(matrix_projection,proj_matrix);

culled_boxes *= 3;

for(var ii = 0;ii &lt; culled_boxes;ii += 3)
{
    var
    _x = drawposition[@ ii],
    _y = drawposition[@ ii + 1],
    _z = drawposition[@ ii + 2],
    _ex = drawextent[@ ii],
    _ey = drawextent[@ ii + 1],
    _ez = drawextent[@ ii + 2],
    
    d3d_draw_block(_x - _ex,_y - _ey,_z - _ez,
                   _x + _ex,_y + _ey,_z + _ez,
                   -1,1,1);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(culled_list);
ds_list_destroy(unculled_list);

boxposition = 0;
boxextent = 0;
culloffset = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="10" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if_true =! if_true;

ds_list_clear(culled_list);
ds_list_clear(unculled_list);
    
for(var ii = 0;ii &lt; boxcount;ii++)
{
    ds_list_add(culled_list,ii);
};

culloffset = array_create(boxcount);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
